import{a as y,S as L,i as f}from"./assets/vendor-09d7c26e.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const d of s.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&o(d)}).observe(document,{childList:!0,subtree:!0});function i(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(e){if(e.ep)return;e.ep=!0;const s=i(e);fetch(e.href,s)}})();async function g(t,r,i){try{const o=new URLSearchParams({key:"43761083-735c77d8194f3d0bda00bacf0",q:t,image_type:"photo",orientation:"horizontal",safesearch:"true",per_page:i,page:r});return(await y.get(`https://pixabay.com/api/?${o}`)).data}catch(o){throw console.error("Error fetching images:",o),o}}function h(t,r){const i=t.map(e=>`
        <li class="gallery-item">
            <a class="gallery-link" href="${e.largeImageURL}">
                <div class="full-image">
                    <img class="gallery-image" src="${e.webformatURL}" alt="${e.tags}">
                    <ul class="image-button">
                        <li><p>Likes</p><p>${e.likes}</p></li>
                        <li><p>Views</p><p>${e.views}</p></li>
                        <li><p>Comments</p><p>${e.comments}</p></li>
                        <li><p>Downloads</p><p>${e.downloads}</p></li>
                    </ul>
                </div>
            </a>
        </li>
    `).join("");r.insertAdjacentHTML("beforeend",i),new L(".gallery a",{captionsData:"alt",captionDelay:250}).refresh()}function u(t,r){f[r]({message:t,messageColor:"white",position:"topRight",backgroundColor:"red"})}const b=document.querySelector("form"),p=document.querySelector(".gallery"),a=document.querySelector(".spinner"),c=document.querySelector(".load-button");let l=1,m=15,n="";c.classList.add("is-hidden");b.addEventListener("submit",t=>{if(t.preventDefault(),p.innerHTML="",l=1,a.classList.remove("is-hidden"),n=t.target.elements.search_input.value.trim(),n===""){u("All form fields must be filled in","warning"),a.classList.add("is-hidden");return}g(n,l,m).then(r=>{if(r.total===0){u("Sorry, there are no images matching your search query. Please try again!","error");return}h(r.hits,p)}).catch(r=>{console.error("Error fetching images:",r),u("An error occurred while fetching images. Please try again later.","error")}).finally(()=>{t.target.reset(),a.classList.add("is-hidden"),c.classList.remove("is-hidden")})});c.addEventListener("click",async()=>{try{a.classList.remove("is-hidden"),l+=1;const t=await g(n,l,m);h(t.hits,p);let i=document.querySelector(".full-image").getBoundingClientRect();const o=Math.ceil(t.totalHits/m);if(l>o)return c.classList.add("is-hidden"),f.error({position:"topRight",message:"We're sorry, there are no more posts to load",messageColor:"white",backgroundColor:"red"});window.scrollBy({top:i.height*2,behavior:"smooth"})}catch(t){console.log(t)}finally{a.classList.add("is-hidden")}});
//# sourceMappingURL=commonHelpers.js.map
